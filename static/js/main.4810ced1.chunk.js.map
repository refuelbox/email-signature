{"version":3,"sources":["components/Table.js","App.js","serviceWorker.js","index.js"],"names":["info","Table","_ref","name","position","email","skype","phone","skypeUrl","react_default","a","createElement","href","src","alt","height","width","style","textAlign","target","rel","marginRight","display","borderLeft","marginLeft","marginBottom","fontWeight","fontSize","color","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","_ref$target","value","setState","defineProperty","resetSignature","bannerUrl","bannerLink","state","formItemLayout","labelCol","span","wrapperCol","className","margin","es_form","layout","Item","assign","label","input","onChange","es_button","onClick","components_Table","marginTop","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4810ced1.chunk.js","sourcesContent":["import React from 'react';\n\nconst info = {\n    instagram: 'https://instagram.com/refuelbox',\n    twitter: 'https://twitter.com/refuelbox',\n    facebook: 'https://www.facebook.com/refuelbox',\n    instagramIcon: 'https://github.com/ykmsd/email-signature/blob/master/src/img/instagram.png?raw=true',\n    twitterIcon: 'https://github.com/ykmsd/email-signature/blob/master/src/img/twitter.png?raw=true',\n    facebookIcon: 'https://github.com/ykmsd/email-signature/blob/master/src/img/facebook.png?raw=true',\n    color: 'black',\n    companyName: 'ReFuel Box',\n    companyWebsite: 'http://www.refuelbox.com',\n    logo: 'https://refuelbox.com/wp-content/uploads/2019/01/Email-signature-512x512_09.png',\n    logoLink: 'http://www.refuelbox.com'\n};\n\nconst Table = ({ name, position, email, skype, phone, skypeUrl }) => (\n        <table>\n            <tbody>\n                <tr>\n                    <td>\n                        <a href={info.logoLink}>\n                            <img src={info.logo} alt=\"Logo\" height=\"80\" width=\"80\" />\n                        </a>\n                        <div style={{ textAlign: 'center' }}>\n                            <a href={info.twitter} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <img src={info.twitterIcon} alt=\"\" width=\"16px\" height=\"16px\" style={{ marginRight: '3px' }} />\n                            </a>\n                            <a href={info.instagram} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <img src={info.instagramIcon} alt=\"\" width=\"16px\" height=\"16px\" style={{ marginRight: '3px' }} />\n                            </a>\n                            <a href={info.facebook} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <img src={info.facebookIcon} alt=\"\" width=\"16px\" height=\"16px\" />\n                            </a>\n                        </div>\n                    </td>\n                    <td><div style={{ display: 'block', borderLeft: '2px solid #272727', marginLeft: '5px', marginRight: '10px', height: '100px'}}></div></td>\n                    <td>\n                        <div>\n                            <div style={{ marginBottom: '10px'}}>\n                                <span style={{ fontWeight: 'bold' }}>{ã€€name }</span>\n                                <span style={{ display: 'block', fontSize: '11px' }}>{ position }</span>\n                            </div>\n                            <div style={{ fontSize: '11px'}}>\n                                <span style={{ display: 'block'}}>Email: <a href={'mailto:' + email} style={{ color: info.color}}>{ email }</a></span>\n                                <span style={{ display: 'block'}}>Skype: <a href={skypeUrl} target=\"_blank\" rel=\"noopener noreferrer\"><span style={{ color: info.color }}>{ skype }</span></a></span>\n                                <span style={{ display: 'block'}}>Phone: <span style={{ color: info.color }}>{ phone }</span></span>\n                                <a href={info.companyWebsite} target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <span style={{ display: 'block'}}><span style={{ color: info.color }}>{ info.companyWebsite }</span></span>\n                                </a>\n\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n         </table>\n    );\n\nexport default Table","import React, { Component } from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport Table from './components/Table';\nimport { Form, Input, Button } from 'antd';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      position: '',\n      email: '',\n      skype: '',\n      skypeUrl: '',\n      phone: '',\n      bannerUrl: '',\n      bannerLink: ''\n    };\n  }\n\n  handleChange = ({ target: { value, name } }) => {\n    this.setState({\n      [name]: value\n    });\n  };\n\n  resetSignature = () => {\n    this.setState({\n      name: '',\n      position: '',\n      email: '',\n      skype: '',\n      skypeUrl: '',\n      phone: '',\n      bannerUrl: '',\n      bannerLink: ''\n    })\n  }\n\n  render() {\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return (\n      <div className=\"App\" style={{ width: '500px', margin: 'auto' }}>\n        <header className=\"App-header\">\n          <h1>ReFuel Box Email Signature</h1>\n          <p>Please fill the form below to generate your signature</p>\n        </header>\n        <Form layout=\"vertical\" style={{ marginBottom: '20px' }}>\n          <Form.Item {...formItemLayout} label=\"Name\">\n            <Input name=\"name\" onChange={this.handleChange} value={this.state.name} style={{ width: '100%'}}/>\n          </Form.Item>\n          <Form.Item {...formItemLayout} label=\"Position\">\n            <Input name=\"position\" onChange={this.handleChange} value={this.state.position} />\n          </Form.Item>\n          <Form.Item {...formItemLayout} label=\"Email\">\n            <Input name=\"email\" onChange={this.handleChange} value={this.state.email} />\n          </Form.Item>\n          <Form.Item {...formItemLayout} label=\"Phone\">\n            <Input name=\"phone\" onChange={this.handleChange} value={this.state.phone} />\n          </Form.Item>\n          <Form.Item {...formItemLayout} label=\"Skype\">\n            <Input name=\"skype\" onChange={this.handleChange} value={this.state.skype} />\n          </Form.Item>\n          <Form.Item {...formItemLayout} label=\"Skype URL\" style={{ marginBottom: this.state.skype && '0px' }}>\n            <Input name=\"skypeUrl\" onChange={this.handleChange} value={this.state.skypeUrl} />\n          </Form.Item>\n          {\n            this.state.skype &&\n            <span style={{ display: 'block', marginBottom: '30px' }}>To generate Skype URL, go to <a href=\"http://is.gd/\" target=\"_blank\" rel=\"noopener noreferrer\">http://is.gd/</a> and enter: <strong>skype:{this.state.skype}?chat</strong></span>\n          }\n          <Form.Item {...formItemLayout} label=\"Banner URL\">\n            <Input name=\"bannerUrl\" onChange={this.handleChange} value={this.state.bannerUrl} />\n          </Form.Item>\n          <Form.Item {...formItemLayout} label=\"Banner Link\">\n            <Input name=\"bannerLink\" onChange={this.handleChange} value={this.state.bannerLink} />\n          </Form.Item>\n          <Button onClick={this.resetSignature}>Reset Signature</Button>\n        </Form>\n        <div style={{ marginBottom: '30px' }}>\n          <Table\n              name={this.state.name}\n              position={this.state.position}\n              email={this.state.email}\n              skype={this.state.skype}\n              skypeUrl={this.state.skypeUrl}\n              phone={this.state.phone}\n              style={{ marginBottom: '30px' }}\n            />\n            {\n              this.state.bannerUrl &&\n              <div>\n                <a href={this.state.bannerLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <img src={this.state.bannerUrl} alt=\"banner\" width=\"500px\" style={{marginTop: '10px' }} /> \n                </a>\n              </div>\n            }\n        </div>\n          \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}